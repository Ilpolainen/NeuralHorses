##28.12.2016

- I noticed some very annoying factors in Unity.

- The accuracy of calculations changes a lot when turning of the rendering. This happens probably because of the engine might have to skip some physics calculations 
while rendering and make more robust ones. I noticed it, when I printed the estimator function result of the "best" unit in each round. It kept going up while iterating
but as soon as I changed the rendering mode it suddenly dropped down quite a lot. Then it started climbing up again. So the neural network
was adapted always for the currently ongoing calculation-accuracy. It shouldn't be a very big problem, because if I will reach some good results, they obviously
couldn't be so dependent on minopr flas. After all the network should be able to handle a lot of randomness. However my recent results have not
been magnificient, and they have been more like baby steps. 

- I really want to be able to fasten the physics a lot because at the moment my evolutionis not fast enough for reaching very good results.
I'm worried about the bad optimization of my program. I may have to use a faster neuron function than sigmoid but I'm not yet sure how i should do it.
I think It might be ok to use some non-differentiable function defined in pieces. Some really robust. It would speed things up quite I lot.

- I've also had difficulties with handling the executing order of Unity Update() FixedUpdate() and Start() -functions. They make the Initializing process difficult,
cause I'm not in full control with the code.
